
********************************************************************************

Welcome to the Middleman program.

This program allows you to pass data between the DE2 board and an Android
device. The program supports four modes:

        1. DE2 <--> Android: All data received from the DE2 will be send to the

        Android device, and vice versa.

        2. DE2 Loopback: All data received from the DE2 will be send back to
        the DE2.

        3. Android Loopback: All data received from the Android device will be
        sent back to the Android device.

        4. DE2 <--> Multiple Android Devices

Press Ctrl-C at any time to stop the program.

********************************************************************************


Enter the mode (1, 2, 3, or 4): 4

You have chosen DE2<-->Multiple Android devices.  In this mode, messages from
the middleman to the DE2 will have the format:
        byte[0]=ClientID
        byte[1]=Message Size (does not include byte[0] or byte[1])
        byte[2..]=Message
Messages you construct from the DE2-->Middleman also must follow this format.
To broadcast messages from the DE2 to all Android devices, use ClientID=0xFF

Enter the COM # of the Serial Port (Device Manager->Ports): 6
Opening COM6...Done

Local IP interfaces (2):
128.189.221.134 (Local Area Connection)
127.0.0.1 (Loopback Pseudo-Interface 1)

Listening on Port 50002.

********************************************************************************

Recieved from UART a message (3 bytes) for INVALID Client 1 , will be ignored:
         0  0  0
Client connected, IP: 128.189.216.85, Assigned client ID: 1
Client connected, IP: 128.189.194.175, Assigned client ID: 2
DE2 <-- Client 1 (4 bytes):
// pid:0 asks for two cards
        03 16 00 02
DE2 --> Client 1 (1 bytes):
// DE2 Ack
         a
DE2 --> Client 1 (4 bytes):
// DE2 gives pid:0 a card
         0  2  4 14
DE2 --> Client 1 (4 bytes):
// DE2 gives pid:0 a card
         0  2  4 18
DE2 <-- Client 1 (5 bytes):
// pid:0 plays bang on pid:1
        04 14 00 01 01
DE2 --> Client 1 (1 bytes):
// DE2 Ack
         a
DE2 <-- Client 1 (6 bytes):
// pid:0 tells DE2 cards in hand
        DE2 --> Client 2 (3 bytes):
        // DE2 tells pid:1 miss or lose life
         1  1  7
05 11 00 02 02 03
DE2 --> Client 1 (1 bytes):
// DE2 Ack
         a
DE2 <-- Client 1 (4 bytes):
// pid:0 tells DE2 blue cards in front
        03 12 00 00
DE2 --> Client 1 (1 bytes):
// DE2 Ack
         a
DE2 <-- Client 1 (3 bytes):
// pid:0 tells DE2 turn ended
        02 15 00
DE2 --> Client 1 (1 bytes):
// DE2 Ack
         a
